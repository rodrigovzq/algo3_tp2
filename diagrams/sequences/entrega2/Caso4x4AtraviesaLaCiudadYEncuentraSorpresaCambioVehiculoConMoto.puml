@startuml
title Diagrama Secuencia CuatroPorCuatro Atraviesa La Ciudad Y Encuentra Sorpresa Cambio Vehiculo con Moto

autonumber

actor Jugador
Jugador -> "posicion : Celda"++: getCelda(ESTE )
activate Jugador
"posicion : Celda" --> Jugador: celdaEste
deactivate "posicion : Celda"
 Jugador -> "celdaEste : Celda"++: avanzarEn( cxc )


"celdaEste : Celda" -> "sorpresa : CambioVehiculo"++: avanzarEn( cxc )

create "eventoPuntaje : SinPenalizar"
"sorpresa : CambioVehiculo"-> "eventoPuntaje : SinPenalizar": SinPenalizar()

create "eventoVehiculo : SiguienteVehiculo"
"sorpresa : CambioVehiculo" -> "eventoVehiculo : SiguienteVehiculo": SiguienteVehiculo()

create "eventoPosicion : Avanzar"
"sorpresa : CambioVehiculo"  -> "eventoPosicion : Avanzar": Avanzar()

create "evento : Evento"
"sorpresa : CambioVehiculo"  -> "evento : Evento": Evento( eventoPuntaje, eventoVehiculo, eventoPosicion)


"sorpresa : CambioVehiculo" --> "celdaEste : Celda": evento
"celdaEste : Celda" -> "sorpresa : CambioVehiculo": siguiente()
"sorpresa : CambioVehiculo" --> "celdaEste : Celda"--: estado
"celdaEste : Celda" --> Jugador: evento
deactivate "celdaEste : Celda"


Jugador -> "evento : Evento"++: setDireccion( ESTE )
deactivate "evento : Evento"
deactivate Jugador

Jugador -> "evento : Evento"++: actualizarPuntaje( puntaje )
activate Jugador
Jugador <-- "evento : Evento"--: movimientoTotales
deactivate Jugador

Jugador -> "evento : Evento"++: actualizarVehiculo( cxc )
activate Jugador
"evento : Evento" -> "cxc : CuatroPorCuatro"++: siguiente()
 "cxc : CuatroPorCuatro" --> "evento : Evento"--: moto

Jugador <-- "evento : Evento"--: moto
deactivate Jugador

Jugador -> "evento : Evento"++: actualizarPosicion( posicion )
activate Jugador
Jugador <-- "evento : Evento"--: celdaEste
deactivate Jugador

@enduml