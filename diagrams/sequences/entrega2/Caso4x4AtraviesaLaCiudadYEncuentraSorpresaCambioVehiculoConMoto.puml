@startuml
title Diagrama Secuencia CuatroPorCuatro Atraviesa La Ciudad Y Encuentra Sorpresa Cambio Vehiculo con Moto

autonumber

actor Jugador

Jugador -> "posicion : Celda"++: avanzarHaciaLaDireccion( ESTE, cxc )

activate Jugador
"posicion : Celda" -> "celdaEste : Celda"++: avanzarEn( cxc )


"celdaEste : Celda" -> "sorpresa : CambioVehiculo"++: avanzarEn( cxc )

create "eventoPuntaje : SinPenalizar"
"sorpresa : CambioVehiculo"-> "eventoPuntaje : SinPenalizar": SinPenalizar()

create "eventoVehiculo : SiguienteVehiculo"
"sorpresa : CambioVehiculo" -> "eventoVehiculo : SiguienteVehiculo": SiguienteVehiculo()

create "eventoPosicion : Avanzar"
"sorpresa : CambioVehiculo"  -> "eventoPosicion : Avanzar": Avanzar()

create "evento : Evento"
"sorpresa : CambioVehiculo"  -> "evento : Evento": Evento( eventoPuntaje, eventoVehiculo, eventoPosicion)

"sorpresa : CambioVehiculo" --> "celdaEste : Celda": evento

"celdaEste : Celda" --> "posicion : Celda": evento
deactivate "celdaEste : Celda"

"posicion : Celda" -> "evento : Evento"++: setDireccion( ESTE )
deactivate "evento : Evento"
"posicion : Celda" --> Jugador--: evento


Jugador -> "evento : Evento"++: actualizarPuntaje( puntaje )
Jugador <-- "evento : Evento"--: movimientoTotales

Jugador -> "evento : Evento"++: actualizarVehiculo( cxc )
"evento : Evento" -> "cxc : CuatroPorCuatro"++: siguiente()
 "cxc : CuatroPorCuatro" --> "evento : Evento"--: moto

Jugador <-- "evento : Evento"--: moto

Jugador -> "evento : Evento"++: actualizarPosicion( posicion )
Jugador <-- "evento : Evento"--: celdaEste

@enduml