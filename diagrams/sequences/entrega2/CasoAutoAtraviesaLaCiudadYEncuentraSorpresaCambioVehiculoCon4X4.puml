@startuml
title Diagrama Secuencia Auto Atraviesa La Ciudad Y Encuentra Sorpresa Cambio Vehiculo con CuatroPorCuatro

autonumber

actor Jugador

Jugador -> "posicion : Celda"++: getCelda(ESTE )

activate Jugador
"posicion : Celda" --> Jugador: celdaEste
deactivate "posicion : Celda"
Jugador -> "celdaEste : Celda"++: avanzarEn( auto )


"celdaEste : Celda" -> "sorpresa : CambioVehiculo"++: avanzarEn( auto )

create "eventoPuntaje : SinPenalizar"
"sorpresa : CambioVehiculo"-> "eventoPuntaje : SinPenalizar": SinPenalizar()

create "eventoVehiculo : SiguienteVehiculo"
"sorpresa : CambioVehiculo" -> "eventoVehiculo : SiguienteVehiculo": SiguienteVehiculo()

create "eventoPosicion : Avanzar"
"sorpresa : CambioVehiculo"  -> "eventoPosicion : Avanzar": Avanzar()

create "evento : Evento"
"sorpresa : CambioVehiculo"  -> "evento : Evento": Evento( eventoPuntaje, eventoVehiculo, eventoPosicion)

"sorpresa : CambioVehiculo" --> "celdaEste : Celda": evento
"celdaEste : Celda" -> "sorpresa : CambioVehiculo": siguiente()
"sorpresa : CambioVehiculo" --> "celdaEste : Celda"--: estado

"celdaEste : Celda" --> Jugador: evento
deactivate "celdaEste : Celda"
Jugador -> "evento : Evento"++: setDireccion( ESTE )
deactivate "evento : Evento"

deactivate Jugador

Jugador -> "evento : Evento"++: actualizarPuntaje( puntaje )
activate Jugador
Jugador <-- "evento : Evento"--: movimientoTotales
deactivate Jugador

Jugador -> "evento : Evento"++: actualizarVehiculo( auto )
activate Jugador
"evento : Evento" -> "auto : Auto"++: siguiente()
 "auto : Auto" --> "evento : Evento"--: cuatroPorCuatro

Jugador <-- "evento : Evento"--: cuatroPorCuatro
deactivate Jugador


Jugador -> "evento : Evento"++: actualizarPosicion( posicion )
activate Jugador
Jugador <-- "evento : Evento"--: celdaEste
deactivate Jugador
@enduml