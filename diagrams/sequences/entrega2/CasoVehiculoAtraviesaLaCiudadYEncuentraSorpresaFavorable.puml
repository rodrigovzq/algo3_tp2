@startuml
title Diagrama Secuencia Vehiculo Atraviesa La Ciudad Y Encuentra Sorpresa Favorable


autonumber

actor Jugador

Jugador -> "posicion : Celda"++: getCelda(ESTE )

activate Jugador
"posicion : Celda" --> Jugador: celdaEste
deactivate "posicion : Celda"
Jugador -> "celdaEste : Celda"++: avanzarEn( auto )


"celdaEste : Celda" -> "sorpresa : Favorable"++: avanzarEn( v )

create "eventoPuntaje : DescuentoPorcentaje"
"sorpresa : Favorable"-> "eventoPuntaje : DescuentoPorcentaje":  DescuentoPorcentaje( 20 )

create "eventoVehiculo : NoCambiarVehiculo"
"sorpresa : Favorable" -> "eventoVehiculo : NoCambiarVehiculo": NoCambiarVehiculo()

create "eventoPosicion : Avanzar"
"sorpresa : Favorable"  -> "eventoPosicion : Avanzar": Avanzar()

create "evento : Evento"
"sorpresa : Favorable"  -> "evento : Evento": Evento( eventoPuntaje, eventoVehiculo, eventoPosicion)

"sorpresa : Favorable" --> "celdaEste : Celda": evento

"celdaEste : Celda" -> "sorpresa : Favorable": siguiente()
create "comun : Comun"
"sorpresa : Favorable" -> "comun : Comun": Comun()
"sorpresa : Favorable" --> "celdaEste : Celda"--: estado = comun

"celdaEste : Celda" --> Jugador: evento
deactivate "celdaEste : Celda"
Jugador -> "evento : Evento"++: setDireccion( ESTE )
deactivate "evento : Evento"
deactivate Jugador

Jugador -> "evento : Evento"++: actualizarPuntaje( puntaje )
activate Jugador
"evento : Evento" -> "puntaje : Movimiento"++: aplicarDescuento( 20 )
"puntaje : Movimiento" --> "evento : Evento": movimientoTotales
deactivate "puntaje : Movimiento"
Jugador <-- "evento : Evento"--: movimientoTotales
deactivate Jugador


Jugador -> "evento : Evento"++: actualizarVehiculo( auto )
activate Jugador
Jugador <-- "evento : Evento"--: auto
deactivate Jugador


Jugador -> "evento : Evento"++: actualizarPosicion( posicion )
activate Jugador
Jugador <-- "evento : Evento"--: celdaEste
deactivate Jugador
@enduml