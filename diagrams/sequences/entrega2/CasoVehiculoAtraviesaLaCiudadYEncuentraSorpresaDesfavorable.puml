@startuml
title Diagrama Secuencia Vehiculo Atraviesa La Ciudad Y Encuentra Sorpresa Desfavorable
autonumber
actor Jugador

Jugador -> "posicion : Celda"++: getCelda(ESTE )
activate Jugador
"posicion : Celda" --> Jugador: celdaEste
deactivate "posicion : Celda"
Jugador -> "celdaEste : Celda"++: avanzarEn( v )
"celdaEste : Celda" -> "sorpresa : Desfavorable"++: avanzarEn( v )


create "eventoPuntaje : AumentoPorcentaje"
"sorpresa : Desfavorable"-> "eventoPuntaje : AumentoPorcentaje": AumentoPorcentaje( 25 )



create "eventoVehiculo : NoCambiarVehiculo"
"sorpresa : Desfavorable" -> "eventoVehiculo : NoCambiarVehiculo": NoCambiarVehiculo()


create "eventoPosicion : Avanzar"
"sorpresa : Desfavorable"  -> "eventoPosicion : Avanzar": Avanzar()


create "evento : Evento"
"sorpresa : Desfavorable"  -> "evento : Evento": Evento( eventoPuntaje, eventoVehiculo, eventoPosicion)


"sorpresa : Desfavorable" --> "celdaEste : Celda": evento
"celdaEste : Celda" -> "sorpresa : Favorable": siguiente()
create "comun : Comun"
"sorpresa : Favorable" -> "comun : Comun": Comun()
"sorpresa : Favorable" --> "celdaEste : Celda"--: estado = comun
"celdaEste : Celda" --> Jugador: evento
deactivate "celdaEste : Celda"


Jugador -> "evento : Evento"++: setDireccion( ESTE )
deactivate "evento : Evento"
deactivate Jugador


Jugador -> "evento : Evento"++: actualizarPuntaje( puntaje )
activate Jugador
"evento : Evento" -> "puntaje : Movimiento"++: aplicarAumento( 25 )
"puntaje : Movimiento" --> "evento : Evento": movimientoTotales
deactivate "puntaje : Movimiento"
Jugador <-- "evento : Evento"--: movimientoTotales
deactivate Jugador


Jugador -> "evento : Evento"++: actualizarVehiculo( auto )
activate Jugador
Jugador <-- "evento : Evento"--: auto
deactivate Jugador


Jugador -> "evento : Evento"++: actualizarPosicion( posicion )
activate Jugador
Jugador <-- "evento : Evento"--: celdaEste
deactivate Jugador
@enduml