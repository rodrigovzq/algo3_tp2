@startuml
title Diagrama Secuencia Cuatro por Cuatro Avanza Se Encuentra Con Pozo por Tercera Vez Y Se Penaliza 2 movimientos


autonumber

actor Jugador

Jugador -> "posicion : Celda"++: getCelda(ESTE )
activate Jugador
"posicion : Celda" --> Jugador: celdaEste
deactivate "posicion : Celda"
 Jugador -> "celdaEste : Celda"++: avanzarEn( auto )



"celdaEste : Celda" -> " : Pozo"++: avanzarEn( cxc )
" : Pozo" -> "cxc : CuatroPorCuatro"++: avanzarPozo()

"cxc : CuatroPorCuatro" -> "cxc : CuatroPorCuatro"++: limitePozosExcedido()

alt#Gold   true
    "cxc : CuatroPorCuatro" ->"cxc : CuatroPorCuatro"++: resetearContadorPozos()
    deactivate "cxc : CuatroPorCuatro"
    create "eventoPuntaje :Penalizacion"
    "cxc : CuatroPorCuatro"-> "eventoPuntaje :Penalizacion": Penalizacion( 2 )

    create "eventoVehiculo : NoCambiarVehiculo"
    "cxc : CuatroPorCuatro"-> "eventoVehiculo : NoCambiarVehiculo": NoCambiarVehiculo()

    create "eventoPosicion : Avanzar"
    "cxc : CuatroPorCuatro"-> "eventoPosicion : Avanzar": Avanzar()

    create "evento : Evento"
    "cxc : CuatroPorCuatro"  -> "evento : Evento": Evento( eventoPuntaje, eventoVehiculo, eventoPosicion)

    deactivate "cxc : CuatroPorCuatro"

end
    "cxc : CuatroPorCuatro" --> " : Pozo"--: evento

" : Pozo" --> "celdaEste : Celda": evento
"celdaEste : Celda" -> " : Pozo": siguiente()
" : Pozo" --> "celdaEste : Celda": estado
deactivate " : Pozo"

"celdaEste : Celda" --> Jugador: evento
deactivate "celdaEste : Celda"
Jugador -> "evento : Evento"++: setDireccion( ESTE )
deactivate "evento : Evento"

Jugador -> "evento : Evento"++: actualizarPuntaje( puntaje )
Jugador <-- "evento : Evento"--: movimientoTotales

Jugador -> "evento : Evento"++: actualizarVehiculo( cxc )
Jugador <-- "evento : Evento"--: cxc

Jugador -> "evento : Evento"++: actualizarPosicion( posicion )
Jugador <-- "evento : Evento"--: celdaEste

@enduml