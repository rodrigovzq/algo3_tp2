@startuml
title Diagrama Secuencia Cuatro Por Cuatro Avanza Se Encuentra Con Pozo Y No Se Penaliza


autonumber

actor Jugador

actor Jugador

Jugador -> "posicion : Celda"++: getCelda(ESTE )
activate Jugador
"posicion : Celda" --> Jugador: celdaEste
deactivate "posicion : Celda"
 Jugador -> "celdaEste : Celda"++: avanzarEn( cxc )


"celdaEste : Celda" -> " : Pozo"++: avanzarEn( cxc )
" : Pozo" -> "cxc : CuatroPorCuatro"++: avanzarPozo()



"cxc : CuatroPorCuatro" -> "cxc : CuatroPorCuatro"++: limitePozosExcedido()
alt#Gold   false
    create "eventoPuntaje :SinPenalizar"
    "cxc : CuatroPorCuatro"-> "eventoPuntaje :SinPenalizar": SinPenalizar()

    create "eventoVehiculo : NoCambiarVehiculo"
    "cxc : CuatroPorCuatro"-> "eventoVehiculo : NoCambiarVehiculo": NoCambiarVehiculo()

    create "eventoPosicion : Avanzar"
    "cxc : CuatroPorCuatro"-> "eventoPosicion : Avanzar": Avanzar()

    create "evento : Evento"
    "cxc : CuatroPorCuatro"  -> "evento : Evento": Evento( eventoPuntaje, eventoVehiculo, eventoPosicion)

    deactivate "cxc : CuatroPorCuatro"
end

"cxc : CuatroPorCuatro" --> " : Pozo": evento


deactivate "cxc : CuatroPorCuatro"

" : Pozo" --> "celdaEste : Celda": evento
"celdaEste : Celda" -> " : Pozo": siguiente()
" : Pozo" --> "celdaEste : Celda": estado
deactivate " : Pozo"


"celdaEste : Celda" --> Jugador: evento
deactivate "celdaEste : Celda"

Jugador -> "evento : Evento"++: setDireccion( ESTE )
deactivate "evento : Evento"
deactivate Jugador

Jugador -> "evento : Evento"++: actualizarPuntaje( puntaje )
activate Jugador
Jugador <-- "evento : Evento"--: movimientoTotales
deactivate Jugador


Jugador -> "evento : Evento"++: actualizarVehiculo( cxc )
activate Jugador
Jugador <-- "evento : Evento"--: cxc
deactivate Jugador


Jugador -> "evento : Evento"++: actualizarPosicion( posicion )
activate Jugador
Jugador <-- "evento : Evento"--: celdaEste
deactivate Jugador

@enduml