@startuml
title Diagrama Secuencia Auto Avanza Sin Obstaculos Y Sin Sorpresas Vol. 2
autonumber
actor Jugador

group "X unMovimiento"
activate Jugador

Jugador -> "posicion : Posicion"++: avanzarHaciaLaDireccion( este, auto )

"posicion : Posicion" -> "posicion : Posicion"++: avanzarHaciaElEsteEn( auto )

"posicion : Posicion" -> "celdaEste : Celda"++: avanzarEn( auto )

"celdaEste : Celda" -> Comun++: avanzarEn( auto )
Comun -> "auto : Auto"++: avanzarComun()
create "unMovimiento : Movimiento"
"auto : Auto" -> "unMovimiento : Movimiento"
"auto : Auto" --> Comun: unMovimiento
deactivate "auto : Auto"
Comun --> "celdaEste : Celda": unMovimiento
deactivate Comun
"celdaEste : Celda" --> "posicion : Posicion": unMovimiento
deactivate "celdaEste : Celda"

'Viola el TellDontAsk, pero no es la solucion final.
'Es para chequear que el movimiento es posible, por ejemplo,
'cuando queres pasar por un piquete con un auto. No debemos actualizar
'la posicion, ya que no podemos avanzar.

' Además planteado así, deberíamos hacerlo en cada metodo de avanzar
'porque necesitamos saber que celda es nuestra proxima posicion.
"unMovimiento : Movimiento" <- "posicion : Posicion"++: esPosible()
"unMovimiento : Movimiento" --> "posicion : Posicion": true
deactivate "unMovimiento : Movimiento"
"posicion : Posicion" -> "posicion : Posicion"++: setPosicion( celdaEste )

"posicion : Posicion" --> Jugador--: unMovimiento
deactivate "posicion : Posicion"
deactivate "posicion : Posicion"

Jugador -> "puntaje : Movimiento": sumarunMovimiento( unMovimiento )
end

@enduml