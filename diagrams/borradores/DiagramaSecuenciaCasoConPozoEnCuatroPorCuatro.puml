@startuml
title Diagrama Secuencia Cuatro Por Cuatro Avanza Se Encuentra Con Pozo Y No Se Penaliza

autonumber

actor Jugador

Jugador -> "posicion : Posicion"++: avanzarHaciaLaDireccion( este, cxc )

activate Jugador
"posicion : Posicion" -> "posicion : Posicion"++: avanzarHaciaElEsteEn( cxc )

"posicion : Posicion" -> "celdaEste : Celda"++: avanzarEn( cxc )

"celdaEste : Celda" -> Pozo++: avanzarEn( cxc )
Pozo -> "cxc : CuatroPorCuatro"++: avanzarPozo()
"cxc : CuatroPorCuatro" -> "cxc : CuatroPorCuatro"++: limiteDePozosExcedido()
"cxc : CuatroPorCuatro" --> "cxc : CuatroPorCuatro"--: false
create "unMovimiento  : Movimiento"
"cxc : CuatroPorCuatro" -> "unMovimiento  : Movimiento": Movimiento( 1 )
"cxc : CuatroPorCuatro" --> Pozo: unMovimiento
deactivate "cxc : CuatroPorCuatro"
Pozo --> "celdaEste : Celda": unMovimiento 
deactivate Pozo
"celdaEste : Celda" --> "posicion : Posicion": unMovimiento 
deactivate "celdaEste : Celda"

note left
**Violación Tell Don't Ask**

Pregunta si es válido el
movimiento, ya que a veces no nos
podemos mover por un Piquete
end note
"unMovimiento  : Movimiento" <- "posicion : Posicion"++: esPosible()
"unMovimiento  : Movimiento" --> "posicion : Posicion": true
deactivate "unMovimiento  : Movimiento"
"posicion : Posicion" -> "posicion : Posicion"++: setPosicion( celdaEste )

note left
**Violacion Don't Repeat Yourself**

Verificación para el seteo de la
posicion se repite a lo largo de
todos los diagramas, es decir,
es refactorizable.
end note

"posicion : Posicion" --> Jugador--: unMovimiento
deactivate "posicion : Posicion"
deactivate "posicion : Posicion"

Jugador -> "puntaje : Movimiento"++: sumarMovimientos( unMovimiento  )

@enduml